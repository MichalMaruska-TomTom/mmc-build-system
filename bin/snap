#! /bin/zsh -eu

# Bash can: setop pipefail

# see the previous tag for the Version.
# unless the debian/changelog contains the development
# version already.

#source @@SHAREDIR@@/functions
source /usr/share/build-system/functions.sh
possibly_trace

export INSTALL_IMMEDIATELY=y
export DEBI_OPTIONS=--upgrade

function usage(){
cat >&2 <<EOF
usage: ${0##*/} [+-upb} [--] ARGS...
    -b  ... ignore branch
    -u  ... do not sign!
    -v  ... new version
    -t  ... don't create the (ORIG) tarball
    -i ... install immediately, +i do NOT install
           by default .... update only
EOF
}

DISTRIBUTION=UNRELEASED
DISTRO=$DISTRIBUTION
typeset -a DCH_OPTIONS
typeset -a GBP_OPTIONS
GBP_OPTIONS=()
typeset -a ARGS
ARGS=($@)

while getopts :upibhv:d:t OPT; do
    case $OPT in
	h)
	    usage
	    exit 0;;
	b)
	    # ignore-branch
	    DCH_OPTIONS=("--ignore-branch")
	    GBP_OPTIONS+="--git-ignore-branch"
	    ;;
	u|+u)
	    # fixme: should use arrays
	    # prepend!
	    GBP_OPTIONS+=-u
	    ;;
	p|+p)
	    # /usr/bin/
	    GBP_OPTIONS+="--git-builder=git-pbuilder"
	    ;;
	+i)
	    ## -i don't upgrade, +i don't install at all.
	    ## and how to force it? just leave.
	    INSTALL_IMMEDIATELY=n
	    ;;
	i)
	    # remove the --upgrade
	    DEBI_OPTIONS=""
	    ;;
	v)
	    DEFAULT_NEW_VERSION=$OPTARG
	    ;;
	d)
	    DISTRO=$OPTARG
	    ;;
	t)
	    # still  dpkg-buildpackage will call dpkg-source --before-build
	    # which does not do harm, though.
	    GBP_OPTIONS+=(--git-no-create-orig -b)
	    ;;
	?)
	    echo "problem: $OPT / $OPTIND:  $ARGS[$OPTIND]"
	    case $ARGS[$OPTIND] in
		--git*)
		    GBP_OPTIONS+=$ARGS[$OPTIND]
		    OPTIND=$(expr $OPTIND + 1)
		    ;;
		*)
		    echo "$OPTIND -> $ARGS[$OPTIND] $OPTARG"
		    exit 3;;
	    esac ;;
	*)
	    usage
	    exit 2
    esac
done
shift $(( OPTIND - 1 ))
OPTIND=1


set +e
get_current_tag
found_tag=$?
set -e

# todo: in-place if "git status" says clean

# keep changelog out:
# create it in a hook!

# for release: --git-builder /usr/bin/git-pbuilder
# dubious:
# todo: but, maybe it WAS committed in the last commit & nothing has changed!

# Return 0 iff needs update, 1 if does not!
changelog_needs_new_section() {
if git status --porcelain debian/changelog |grep --silent '^ M'; then
    return 1;
elif git status --porcelain  |grep --silent '^ M'; then
    # something changed, (but _not_ debian/changelog)
    return 0
elif git diff --name-only HEAD~1 | grep 'debian/changelog'; then
    # so nothing changed, was it changed in the previous commit?
    return 0
else
    return 1;
fi
}



# The changelog is updated inside the Git repo.
# After the git checkout, it will be copied.
if changelog_needs_new_section;
then
    # get the current version & increase. The major maybe.
    if [ -z "${DEFAULT_NEW_VERSION:-}" ]
    then
	(echo "Starting a new version $VERSION."
	 echo "Could have been explicitely specified with the -v option." ) >&2
	load_distr_version_from_changelog
	increase_version major
    else
	:
    fi

    # This is fishy:  should be added only on git-dch invocation.
    # not _forever_ into the variable!
    DCH_OPTIONS+="--new-version=${DEFAULT_NEW_VERSION:-$VERSION}"

    # Do I have to provide the previous GIT TAG?
    git-dch --auto --snapshot "--debian-tag=$DISTRO/%(version)s" $DCH_OPTIONS
else
    # cp -v debian/changelog debian/changelog.save
    # Already updated since a release (fixme?). So, the version should be there.
    git-dch --auto --snapshot $DCH_OPTIONS
fi





cecho red "Starting git-buildpackage, with hooks!"

# --git-sign-tags
# --color=auto
# lsb_release -c

export DPUT_OPTIONS=""
export DPUT_TARGETS=${MBS_SNAP_TARGETS-local}

set -x
git-buildpackage \
    --git-ignore-new $GBP_OPTIONS \
    --git-prebuild=pre-build-hook \
    --git-cleaner=/bin/true \
    --git-dist=$DISTRIBUTION \
    --git-arch=$(dpkg-architecture -qDEB_BUILD_ARCH) \
    --git-postbuild=install-dput-snapshot \
    --source-option="--format=\"3.0 (native)\""

set +x


# snap     fast, without any cow. Doesn't verify dependencies
#          but still  control.in ?
# psnap... using cow-builder
# release
#
