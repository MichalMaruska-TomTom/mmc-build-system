#! /bin/bash -eu

# This is invoked in the Build dir.
# and has $GBP_GIT_DIR, ...

# to-be-generated
# function debian_control_automatic() {
#     count1=$(git ls-files debian/control.in|wc -c)

#     count2=$(git ls-files debian/control|wc -c)
#     test \( $count1 != 0 -a $count2 = 0 \)
# }



copy-snapshot-changelog()
{

    # So, git-xxx checks out from Git.
    # But, before that, git-dch is run, and possibly  debian/changelog
    # is not commited to git. -- I need to keep it there, to have increasing
    # version number!
    # So,  git-xxx would retrieve previous version.

    # Work-around (?) for git-dch not being able to write to a specific file

    # This works together with  ./snap, which creates the changelog!


    local_dir=$(pwd)
    # alternatively: pushd
    cd $GBP_GIT_DIR/..

    cp debian/changelog $local_dir/debian/changelog

    # popd
    cd $local_dir
}

arch=""
skip_build_depends=n
while getopts :a:s OPT; do
    case $OPT in
        a|+a)
            arch="$OPTARG"
            ;;
        s)
            skip_build_depends=y
            ;;
        *)
            echo "usage: ${0##*/} [+-a ARG} [--] ARGS..."
            exit 2
    esac
done
shift $(( OPTIND - 1 ))
OPTIND=1

if [ $GBP_GIT_DIR = $(pwd) ]; then
    echo "Your export-dir of git-buildpackage is unset" >&2
    echo "So your build directory is the same as (git) Source dir" >&2
else
    copy-snapshot-changelog
fi

# Generate stuff for  ./configure
if [ -e auto ]
then
    ./auto
fi

if [ ! -e debian/control ]
then
    generate-debian-control
fi


if [[ $skip_build_depends != y ]]
then
    DISTRO=sid
    if [ -n "$arch" ]
    then
        echo GBP_TMP_DIR = $GBP_TMP_DIR
        enter-container --distro $DISTRO --arch $arch \
                        --bind $(realpath $GBP_TMP_DIR/..) \
                        --root --chdir $GBP_TMP_DIR \
                        --verbose -- \
                        /usr/bin/mk-build-deps --install --remove \
                        "--tool=\"apt -o Debug::pkgProblemResolver=yes --no-install-recommends -y\""
        # debpkg -i /run/tmp/apt-tmp/apt-build-deps_1.8.0\~alpha3-maruska\~1.gbp342225_amd64.deb
    else
        # why not debi --with-depends --tool ?
        # install
        /usr/bin/mk-build-deps --install --remove --root-cmd=sudo --tool="apt --no-install-recommends -y -f"
        #"echo --"
        # debpkg -i   -> conflict with -f option
        # -- -f install
        #
    fi
fi

echo "------------------- pre-build-hook finished ----------"
